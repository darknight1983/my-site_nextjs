{"version":3,"file":"static/webpack/static/development/pages/index.js.d59632fb90a715a5dfe8.hot-update.js","sources":["webpack:///./components/Projects.js"],"sourcesContent":["import Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport PropTypes from 'prop-types';\nimport posed from 'react-pose';\nimport React from 'react';\n\n\nconst styles = theme => ({\n  items: {\n\n  },\n  projects: {\n    width: '70%',\n    height: '70%',\n    marginTop: '10px'\n  },\n  projectImg: {\n    width: '100%',\n    height: '100%'\n  },\n  margin: {\n    marginTop: '100px',\n    marginBottom: '40px'\n  },\n  h1: {\n    padding: '10px',\n    backgroundColor: '#0D47A1'\n  },\n  description: {\n    padding: '10px',\n    marginBottom: '15px'\n  },\n  content: {\n    overflow: 'hidden',\n    backgroundColor: theme.palette.secondary,\n  },\n  contentWrapper: {\n    padding: '10px'\n  },\n  clickDesc: {\n    marginTop: '20px',\n  },\n  techGrid: {\n    backgroundColor: '#9E9E9E',\n    marginTop: 40,\n    opacity: 0.9\n  },\n  gitLink: {\n    padding: '10px',\n    backgroundColor: '#0D47A1',\n  }\n})\n\nconst ImgBox = posed.div({\n  hoverable: true,\n  init: {\n    scale: 1,\n    boxShadow: '0px 0px 0px rgba(0,0,0,0)'\n  },\n  hover: {\n    scale: 1.1,\n  }\n})\n\nconst Content = posed.div({\n  closed: { height: 0 },\n  open: { height: 'auto' }\n})\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      projects: [\n        {\n          title: 'Neighborhood Map (React)',\n          description: 'Build a single page map application using React and the Google Maps API. Integrate a third-party data API and make your app accessible and usable offline.',\n          link: 'https://github.com/darknight1983/neighboorhood-react-map',\n          technologies: ['Google Maps API', 'React', 'Material-UI'],\n          image: '/static/imgs/NeighboorhoodMap.png'\n        },\n        {\n          title: 'Addison Treehouse Benefits',\n          description: \"Currently working on a web application for Addision Treehouse which serves as a hub for all member benefits and perks. Future iterations are in progress.\",\n          link: \"https://github.com/darknight1983/Treehouse.git\",\n          technologies: ['Material-UI', 'Next.js', 'React', 'Pose'],\n          image: '/static/imgs/AddisonTreehouse.png'\n        },\n        {\n          title: 'MyReads: A Book Lending App',\n          description: 'Built a responsive web application that allows users to select and categorize books into a virtual bookshelf. Leveraged React to support a dynamic user interface that interacts with an API server and client library.',\n          link: \"https://github.com/darknight1983/myReads\",\n          technologies: ['React', 'Node', 'Express'],\n          image: '/static/imgs/testProject.png'\n        },\n        {\n          title: 'Bamazon',\n          description: 'A Node.js & MySQL digital storefront. This is a command line Node app that mimics a beloved online retailer.',\n          link: 'https://github.com/darknight1983/bamazon_app',\n          technologies: ['MYSQL', 'Inquirer', 'Cli-table', \"Node.js\"],\n          image: '/static/imgs/bamazon.png'\n        },\n      ]\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    const { projects, open } = this.state;\n    return (\n      <div className={classes.margin}>\n        <Typography variant='h2'\n                    component='h1'\n                    color='primary'\n                    align='center'\n                    className={classes.margin}>\n          Projects\n        </Typography>\n        <Grid container justify=\"center\" alignContent=\"space-around\" spacing={16}>\n          {projects.map((project, i) => (\n            <Grid item key={i}\n                  className={classes.items}\n                  xs={10}\n                  sm={10}\n                  md={5}\n                  lg={5}>\n              <Paper square={true}>\n                <Typography variant='h5'\n                            component='h1'\n                            color='secondary'\n                            align='center'\n                            className={classes.h1}>\n                  {project.title}\n                </Typography>\n                <Grid item xs={12} align=\"center\">\n                  <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                    Primary\n                  </Button>\n                </Grid>\n                <Typography variant='title'\n                            component='h5'\n                            align='center'\n                            onClick={() => this.setState({ open: open === i ? false : i })}\n                            className={classes.clickDesc}>\n                        {`Click for description`}\n                </Typography>\n                <Content className={classes.content} pose={open === i ? 'open' : 'closed'}>\n                  <Typography className={classes.contentWrapper}\n                              component='div'\n                              variant='subheading'>\n                    {project.description}\n                  </Typography>\n                </Content>\n                <Grid container justify='center'>\n                  <Grid item className={classes.projects}>\n                    <ImgBox>\n                      <img src={project.image}\n                           alt='Image of project'\n                           className={classes.projectImg}/>\n                    </ImgBox>\n                  </Grid>\n                </Grid>\n                <Grid container className={classes.techGrid}>\n                  {project.technologies.map((tech, i) => (\n                    <Grid item xs={6} align=\"center\">\n                      <Typography variant=\"title\" color=\"primary\">\n                        {tech}\n                      </Typography>\n                    </Grid>\n                  ))}\n                  {/*\n\n                    <Grid item>\n                      <List>\n                        {project.technologies.map((tech, i) => (\n                          <ListItem button={true}>{tech}</ListItem>\n                        ))}\n                      </List>\n                    </Grid>\n\n                    */}\n\n                </Grid>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Projects);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAxCA;AAAA;AACA;AA6CA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AANA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAxBA;AAHA;AAoCA;AACA;;;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AA5CA;AAsEA;;;;AAzHA;AACA;AA2HA;;;;A","sourceRoot":""}